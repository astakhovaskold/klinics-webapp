kind: pipeline
name: default
type: docker

platform:
  os: linux
  arch: amd64

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    settings:
      restore: true
      mount:
        - .eslintcache
        - ./node_modules
    volumes:
    - name: cache
      path: /cache

  - name: install
    image: node:18.14.0-alpine
    commands:
      - npm install -g pnpm@7.27.0
      - npm -v
      - pnpm install --frozen-lockfile --unsafe-perm
    depends_on:
    - restore-cache

  - name: lint
    image: node:18.14.0-alpine
    commands:
      - npm install -g pnpm@7.27.0
      - pnpm run lint
    when:
      branch:
        exclude:
        - develop
        - master
    depends_on:
    - install

  - name: rebuild-cache-lint
    image: drillster/drone-volume-cache
    settings:
      rebuild: true
      mount:
        - .eslintcache
    volumes:
      - name: cache
        path: /cache
    when:
      branch:
        exclude:
        - develop
        - master
    depends_on:
    - lint

  - name: build
    image: node:18.14.0-alpine
    commands:
      - npm i -g pnpm@7.27.0
      - pnpm build
    when:
      branch:
        include:
          - develop
          - release/*
    depends_on:
      - install

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
    volumes:
      - name: cache
        path: /cache
    when:
      branch:
        - develop
    depends_on:
      - build

  - name: publish
    image: plugins/docker
    settings:
      repo: astakhovaskold/mdc-webapp
      target: mdc-webapp
      auto_tag: false
      auto_tag_suffix: ${DRONE_COMMIT_BRANCH//\//-}
      force_tag: true
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - ${DRONE_COMMIT_BRANCH//\//-}
    when:
      branch:
        include:
        - develop
        - master
    depends_on:
    - lint

  - name: notification
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: TELEGRAM_TOKEN
      to:
        from_secret: TELEGRAM_USER_ID
    when:
      status: [ success, failure ]
    format: markdown
    message: >
      {{#success build.status}}
      ✅ Build #{{build.number}} of `{{repo.name}}` succeeded.
      
      📝 Commit by {{commit.author}} on `{{commit.branch}}`:
      
      ```
      {{commit.message}}
      ```
      
      🌐 {{ build.link }}
      {{else}}
      ❌ Build #{{build.number}} of `{{repo.name}}` failed.
      
      📝 Commit by {{commit.author}} on `{{commit.branch}}`:
      
      ```
      {{commit.message}}
      ```
      
      🌐 {{ build.link }}
      {{/success}}
    depends_on:
      - publish

volumes:
  - name: cache
    host:
      path: /tmp
